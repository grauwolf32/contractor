async def run_agent(runner, user_id, session_id, content):
    print(f"\nRunning {runner.agent.name}...")

    if isinstance(content, (list, tuple)):
        content = "\n".join(map(str, content))
    if isinstance(content, str):
        content = Content(role="user", parts=[Part(text=content)])

    final_response_text = None

    async for event in runner.run_async(
        user_id=user_id,
        session_id=session_id,
        new_message=content,
    ):
        is_final = getattr(event, "is_final_response", None)
        if callable(is_final) and is_final():
            c = getattr(event, "content", None)
            if c and getattr(c, "parts", None):
                t = getattr(c.parts[0], "text", None)
                if t:
                    final_response_text = t
            # ВАЖНО: не делаем break — дочитываем до конца

    session = await runner.session_service.get_session(
        app_name=APP_NAME,
        user_id=user_id,
        session_id=session_id
    )

    print(f"{runner.agent.name} completed.")
    return final_response_text, session.state


from pydantic import BaseModel
class AgentRunner()